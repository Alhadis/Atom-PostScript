name: "PostScript"
scopeName: "source.postscript"
fileTypes: [
	"ps"
	"eps", "epsf", "epsi"
	"gsf", "pfa", "pfb", "t1", "t42", "inf"
	"ai", "aia", "pdf"
	"joboptions"
	"AIAppResources"
	"Adobe Illustrator Cloud Prefs"
	"Adobe Illustrator Prefs"
	"Tools Panel Presets"
	"cidfmap", "Fontmap", "Fontmap.GS", "xlatmap"
	"PPI_CUtils", "Pscript5Idiom"
]
firstLineMatch: """(?x)
	# Signature
	\\A%(?:!|PDF)
	|
	# Adobe Illustrator preferences
	\\A/(?:Menus|collection1)\\ {(?:\\r|$)
	|
	# Header field of “.inf” manifests
	\\AAppleFONDID
	|
	# Best guess for extensionless files distributed with GhostScript
	(?i:\\A%+\\s+Copyright\\s+\\(C\\)\\s+([-\\d]+),?\\s+Artifex\\sSoftware\\b)
	|
	# Hashbang
	^\\#!.*(?:\\s|\\/|(?<=!)\\b)
		gs
	(?:$|\\s)
	|
	# Modeline
	(?i:
		# Emacs
		-\\*-(?:\\s*(?=[^:;\\s]+\\s*-\\*-)|(?:.*?[;\\s]|(?<=-\\*-))mode\\s*:\\s*)
			(?:ps|postscript)
		(?=[\\s;]|(?<![-*])-\\*-).*?-\\*-
		
		|
		
		# Vim
		(?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|\\sex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s* set?\\s))
		(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:]
		(?:filetype|ft|syntax)\\s*=
			postscr(?:ipt)?
		(?=\\s|:|$)
	)
"""
foldingStartMarker: "(?:{|<<|^stream)\\s*$"
foldingStopMarker:  "(?:}|>>|^end(?:stream|obj))"
limitLineLength: no
maxTokensPerLine: 1000

patterns: [{
	name:  "meta.document.pdf"
	begin: "\\A(?=%PDF)"
	end:   "(?=A)B"
	patterns: [include: "#main"]
},{
	name:  "meta.ai-prefs.postscript"
	begin: "\\A(?=/(?:(?:Menus|collection1|precision) {|textImportantVisualLinesSnapping \\d)(?:\\r|$))"
	end:   "(?=A)B"
	patterns: [include: "#main"]
}, include: "#main"]

# Corrections for faux-PostScript highlighting
injections:
	# Adobe Illustrator preferences
	"L:source.postscript meta.ai-prefs.postscript - (comment | string | source.embedded | text.embedded)":
		patterns: [{
			# /hexEncodedSetting [ length … hex-bytes ]
			name:  "meta.obfuscated-setting.ai-prefs.postscript"
			begin: "^\\s*(/(?:\\\\.|[^()<>\\[\\]{}/%\\s])*) ((\\[) (?!0\\b)(\\d+)(?:$|\\r))"
			end:   "^\\s*(\\])|\\G(?!$)|(?!\\G)^(?!\\s*(?:\\]|[A-Fa-f0-9]+$))"
			contentName: "meta.array.postscript"
			beginCaptures:
				1: patterns: [include: "$self"]
				2: name: "meta.array.postscript"
				3: name: "punctuation.definition.array.begin.postscript"
				4: name: "constant.numeric.postscript"
			endCaptures:
				0: name: "meta.array.postscript"
				1: name: "punctuation.definition.array.end.postscript"
			patterns: [{
				name: "string.other.hexadecimal.postscript"
				match: "[A-Fa-f0-9]+"
			}]
		},{
			# /This\ escape\ sequence\ syntax\ doesn't\ normally\ work
			name:  "variable.other.constant.literal.postscript"
			match: "(/)((?:\\\\.|[^()<>\\[\\]{}/%\\s])*)"
			captures:
				1: name: "punctuation.definition.name.postscript"
				2: patterns: [{
					name: "constant.character.escape.postscript"
					match: "(\\\\)."
					captures:
						1: name: "punctuation.definition.escape.backslash.postscript"
				}]
		},{
			# Presumably a long integer: 65535L
			name:  "constant.numeric.integer.long.postscript"
			match: "[0-9]+L"
		}]
	
	# PDF-specific elements
	"L:source.postscript meta.document.pdf - (meta.encrypted-source | source.embedded | text.embedded)":
		patterns: [{
			# Binary streams
			name:  "meta.encrypted-source.stream.pdf"
			begin: "(?:^|(?<=>>)\\s*)(?=stream$)"
			end:   "endstream|(?=endobj\\b)"
			endCaptures:
				0: name: "keyword.control.stream.end.pdf"
			patterns: [{
				begin: "\\G(stream)\\s*$\\s*"
				end:   "(?=endstream|(?=endobj\\b))"
				beginCaptures:
					1: name: "keyword.control.stream.begin.pdf"
				patterns: [{
					# Those weird-ass XML chunks Adobe Illustrator uses
					begin: "(<\\?xpacket(?=\\s)[^>]+\\?>)(?=$|<x:xmpmeta)"
					end:   "(<\\?xpacket(?=\\s)[^>]*end\\b[^>]*\\?>)|(?=\\s*(?:endstream|endobj\\b))"
					beginCaptures: 1: name: "text.embedded.xml", patterns: [include: "text.xml"]
					endCaptures:   1: name: "text.embedded.xml", patterns: [include: "text.xml"]
					contentName: "text.embedded.xml"
					patterns: [include: "text.xml"]
				},{
					# Ascii85
					name:  "string.other.base85.pdf"
					begin: "(?!endstream)[!-uz]{50,80}\\s*$"
					end:   "~>|(?=\\s*(?:endstream|endobj\\b))"
					endCaptures:
						0: name: "punctuation.definition.string.end.pdf"
				},{
					# Raw binary
					name:  "string.other.raw.binary.pdf"
					begin: "(?!endstream|[!-uz]{50,80}\\s*$)(?:(?<=[\\n\\r]|\\G|^))(?=.)"
					end:   "(?=\\s*(?:endstream|endobj\\b))"
					contentName: "sublimelinter.gutter-mark"
				}]
			}]
		},{
			# Objects
			match: "(?<![^/\\s{}()<>\\[\\]%])\\b(obj)\\s*(?=<<|$)|(?<=^|\\n|>>)(endobj)"
			captures:
				1: name: "keyword.control.object.begin.pdf"
				2: name: "keyword.control.object.end.pdf"
		},{
			# Trailer
			name:  "keyword.control.$1.pdf"
			match: "(?<![^/\\s{}()<>\\[\\]%])\\b(trailer|startxref)(?![^/\\s{}()<>\\[\\]%])"
		}]

	# Inhibit highlighting of encrypted sections in procedure bodies
	"L:source.postscript meta.procedure.postscript - (comment | string | text.embedded)":
		patterns: [{
			match: "\\s*(?<=^|\\G|[\\[{\\s])\\b(currentfile)\\b(?=[\\[{\\s])"
			captures:
				1: name: "keyword.operator.postscript"
		}]

repository:
	main:
		patterns: [
			{include: "#string"}
			{include: "#comment"}
			{include: "#dictionary"}
			{include: "#array"}
			{include: "#procedure"}
			{include: "#base85"}
			{include: "#hex"}
			{include: "#radix"}
			{include: "#number"}
			{include: "#embedded"}
			{include: "#operators"}
			{include: "#extensions"}
			{include: "#compatibility"}
			{include: "#embeddedRow"}
			{include: "#names"}
		]


	# [ … ]
	array:
		name:  "meta.array.postscript"
		begin: "\\["
		end:   "\\]"
		beginCaptures: 0: name: "punctuation.definition.array.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.array.end.postscript"
		patterns: [include: "#main"]


	# Ascii85-encoded data: <~ … ~>
	base85:
		name:  "string.other.base85.postscript"
		begin: "<~"
		end:   "~>"
		beginCaptures: 0: name: "punctuation.definition.string.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.string.end.postscript"
		patterns: [
			name: "invalid.illegal.base85.char.postscript"
			match: "(?:[^!-uz\\s]|~(?!>))++"
		]


	# % Commented line
	comment:
		patterns: [
			# XXX: Not sure why TextMate tokenises this, but I guess I will too
			name:  "punctuation.whitespace.comment.leading.postscript"
			match: "^[ \\t]+(?=%)"
			
			# %%DSC: Document Structuring Conventions
			{include: "#dsc"}
			
			# % Comment
			name:  "comment.line.percentage.postscript"
			begin: "%"
			end:   "(?=$|\\r|\\f)"
			beginCaptures:
				0: name: "punctuation.definition.comment.postscript"
		]


	# Operators and procedures defined for backwards compatibility with LanguageLevel 1
	# https://web.archive.org/web/20041102173710/partners.adobe.com/asn/developer/pdfs/tn/PS3010and3011.Supplement.pdf
	compatibility:
		name: "keyword.operator.compatibility.postscript"
		match: """(?x) (?<![^/\\s{}()<>\\[\\]%]) (?:\\b|(?=\\.))
			( 11x17tray
			| 11x17
			| a3tray
			| a3
			| a4small
			| a4tray
			| a4
			| accuratescreens
			| appletalktype
			| b5tray
			| b5
			| buildtime
			| byteorder
			| checkpassword
			| checkscreen
			| defaulttimeouts
			| devdismount
			| devforall
			| devformat
			| devmount
			| devstatus
			| diskonline
			| diskstatus
			| doprinterrors
			| dostartpage
			| dosysstart
			| duplexmode
			| emulate
			| firstside
			| hardwareiomode
			| initializedisk
			| jobname
			| jobtimeout
			| ledgertray
			| ledger
			| legaltray
			| legal
			| lettersmall
			| lettertray
			| letter
			| manualfeedtimeout
			| manualfeed
			| margins
			| mirrorprint
			| newsheet
			| note
			| pagecount
			| pagemargin
			| pageparams
			| pagestackorder
			| printername
			| processcolors
			| ramsize
			| realformat
			| resolution
			| sccbatch
			| sccinteractive
			| setaccuratescreens
			| setdefaulttimeouts
			| setdoprinterrors
			| setdostartpage
			| setdosysstart
			| setduplexmode
			| sethardwareiomode
			| setjobtimeout
			| setmargins
			| setmirrorprint
			| setpagemargin
			| setpageparams
			| setpagestackorder
			| setpage
			| setprintername
			| setresolution
			| setsccbatch
			| setsccinteractive
			| setsoftwareiomode
			| settumble
			| setuserdiskpercent
			| softwareiomode
			| tumble
			| userdiskpercent
			| waittimeout
			) \\b (?![^/\\s{}()<>\\[\\]%])
		"""


	# << … >>
	dictionary:
		name:  "meta.dictionary.postscript"
		begin: "<<"
		end:   ">>"
		beginCaptures: 0: name: "punctuation.definition.dictionary.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.dictionary.end.postscript"
		patterns: [include: "#main"]


	# Document Structuring Convention
	dsc:
		name: "meta.Document-Structuring-Comment.postscript"
		beginCaptures:
			0: name: "keyword.other.DSC.postscript"
			1: name: "punctuation.definition.keyword.DSC.postscript"
			3: name: "keyword.operator.assignment.key-value.colon.postscript"
		contentName: "string.unquoted.DSC.postscript"
		begin: """(?x) ^ (%%)
			( BeginBinary
			| BeginCustomColor
			| BeginData
			| BeginDefaults
			| BeginDocument
			| BeginEmulation
			| BeginExitServer
			| BeginFeature
			| BeginFile
			| BeginFont
			| BeginObject
			| BeginPageSetup
			| BeginPaperSize
			| BeginPreview
			| BeginProcSet
			| BeginProcessColor
			| BeginProlog
			| BeginResource
			| BeginSetup
			| BoundingBox
			| CMYKCustomColor
			| ChangeFont
			| Copyright
			| CreationDate
			| Creator
			| DocumentCustomColors
			| DocumentData
			| DocumentFonts
			| DocumentMedia
			| DocumentNeededFiles
			| DocumentNeededFonts
			| DocumentNeededProcSets
			| DocumentNeededResources
			| DocumentPaperColors
			| DocumentPaperForms
			| DocumentPaperSizes
			| DocumentPaperWeights
			| DocumentPrinterRequired
			| DocumentProcSets
			| DocumentProcessColors
			| DocumentSuppliedFiles
			| DocumentSuppliedFonts
			| DocumentSuppliedProcSets
			| DocumentSuppliedResources
			| EOF
			| Emulation
			| EndBinary
			| EndComments
			| EndCustomColor
			| EndData
			| EndDefaults
			| EndDocument
			| EndEmulation
			| EndExitServer
			| EndFeature
			| EndFile
			| EndFont
			| EndObject
			| EndPageSetup
			| EndPaperSize
			| EndPreview
			| EndProcSet
			| EndProcessColor
			| EndProlog
			| EndResource
			| EndSetup
			| ExecuteFile
			| Extensions
			| Feature
			| For
			| IncludeDocument
			| IncludeFeature
			| IncludeFile
			| IncludeFont
			| IncludeProcSet
			| IncludeResource
			| LanguageLevel
			| OperatorIntervention
			| OperatorMessage
			| Orientation
			| PageBoundingBox
			| PageCustomColors
			| PageFiles
			| PageFonts
			| PageMedia
			| PageOrder
			| PageOrientation
			| PageProcessColors
			| PageRequirements
			| PageResources
			| PageTrailer
			| Pages
			| Page
			| PaperColor
			| PaperForm
			| PaperSize
			| PaperWeight
			| ProofMode
			| RGBCustomColor
			| Requirements
			| Routing
			| Title
			| Trailer
			| VMlocation
			| VMusage
			| Version
			| \\+
			| \\?BeginFeatureQuery
			| \\?BeginFileQuery
			| \\?BeginFontListQuery
			| \\?BeginFontQuery
			| \\?BeginPrinterQuery
			| \\?BeginProcSetQuery
			| \\?BeginQuery
			| \\?BeginResourceListQuery
			| \\?BeginResourceQuery
			| \\?BeginVMStatus
			| \\?EndFeatureQuery
			| \\?EndFileQuery
			| \\?EndFontListQuery
			| \\?EndFontQuery
			| \\?EndPrinterQuery
			| \\?EndProcSetQuery
			| \\?EndQuery
			| \\?EndResourceListQuery
			| \\?EndResourceQuery
			| \\?EndVMStatus
			) (:)? [^\\S\\r\\n]*
		"""
		end: "(?=$|\\r|\\f)"


	# Encrypted PostScript sections
	embedded:
		patterns: [{
			# `readline` from `currentfile`
			contentName: "string.unquoted.heredoc.postscript"
			begin: "(?<![^/\\s{}()<>\\[\\]%])\\b(currentfile)\\s+((?=\\S)[^{}%]+?)\\s+(readline)(?!\\s*})\\b(?![^/\\s{}()<>\\[\\]%])(?:$\\s*)?"
			end:   "(?!\\G)$"
			beginCaptures:
				1: name: "keyword.operator.postscript"
				2: patterns: [include: "#main"]
				3: name: "keyword.operator.postscript"
		},{
			# Base85-encoded
			name:  "meta.encrypted-source.base85.postscript"
			begin: "(?<![^/\\s{}()<>\\[\\]%])\\b(currentfile)\\s*((/)ASCII85Decode)\\s+(filter)\\b(?![^/\\s{}()<>\\[\\]%])([^}>\\]%]*?(?:exec|image|readstring)\\s*)$\\s*+"
			end:   "~>|(?=cleartomark|closefile)"
			contentName: "string.other.base85.postscript"
			beginCaptures:
				1: name: "keyword.operator.postscript"
				2: name: "variable.other.literal.postscript"
				3: name: "punctuation.definition.name.postscript"
				4: name: "keyword.operator.postscript"
				5: patterns: [include: "#main"]
			endCaptures:
				0: name: "punctuation.definition.string.end.postscript"
		},{
			# `eexec` encryption, typically found only in Type 1 font programs
			name:  "meta.encrypted-source.eexec.postscript"
			begin: "(?<![^/\\s{}()<>\\[\\]%])\\b(currentfile)\\s+(eexec)(?:$|(?=.*[\\0-\\x08\\x14-\\x31\\x7F\\x80-\\x9F])(?=.{0,3}?[^A-Fa-f0-9]|\\b[A-Fa-f0-9]))"
			end:   "(cleartomark|closefile)\\b(?![^/\\s{}()<>\\[\\]%])|(?<=\\G)(?=[^\\s0-9A-Fa-f])"
			beginCaptures:
				1: name: "keyword.operator.postscript"
				2: name: "keyword.operator.postscript"
			endCaptures:
				1: name: "keyword.operator.postscript"
			patterns: [{
				begin: "\\G(?=\\s*$)"
				end:   "(?=\\s*\\S)"
			},{
				begin: "(?:\\G|(?<=\\n|^))\\s*(?=\\S)"
				end:   "(?!\\G)"
				patterns: [{
					# Raw binary
					# - TODO: Find out how PostScript engines differentiate between a
					#   procedure named `eexecute` and `eexec` followed by raw binary.
					name:  "string.other.raw.binary.postscript"
					begin: "\\G(?!cleartomark|closefile)(?=.{0,3}?[^A-Fa-f0-9])"
					end:   "(?=\\s*(?:cleartomark|closefile))"
					contentName: "sublimelinter.gutter-mark"
				},{
					# Hexadecimal
					name:  "string.other.hexadecimal.postscript"
					begin: "\\G(?!cleartomark|closefile)(?=\\s{0,3}?(?:[A-Fa-f0-9]))"
					end:   "(?=\\s*[^A-Fa-f0-9\\s]|cleartomark|closefile)"
				}]
			}]
		}]


	# Lines of obvious-looking Ascii85-encoded data
	embeddedRow:
		patterns: [{
			name: "string.other.base85.postscript"
			match: "^[!-uz]{0,78}(~>)"
			captures:
				1: name: "punctuation.definition.string.end.postscript"
		},{
			name:  "string.other.base85.postscript"
			begin: """(?x) ^
				(?= [^%\\[]*? \\]
				|   [^%(]*?   \\)
				|   [^%<]*?   >
				|   .*? <(?!~|<) [A-Fa-f0-9]* [^~>A-Fa-f0-9]
				) [!-uz]{60,80} [^\\S\\r\\n]* $
			"""
			end: "^[!-uz]{0,78}(~>)"
			endCaptures:
				0: name: "punctuation.definition.string.end.postscript"
		}]


	# Implementation-specific PostScript operators
	extensions:
		patterns: [{
			# Acrobat Distiller operators for manipulating PDF conversion settings
			# https://opensource.adobe.com/dc-acrobat-sdk-docs/library/pdfcreation/index.html#how-distiller-processes-postscript-files
			name: "keyword.operator.distiller.postscript"
			match: "(?<![^/\\s{}()<>\\[\\]%])\\b((?:current|set)distillerparams)\\b(?![^/\\s{}()<>\\[\\]%])"
		},{
			# GhostScript extensions to the PostScript language
			# https://ghostscript.readthedocs.io/en/latest/Language.html#additional-operators-in-ghostscript
			name: "keyword.operator.ghostscript.postscript"
			match: """(?x) (?<![^/\\s{}()<>\\[\\]%]) (?:\\b|(?=\\.))
				( \\.activatepathcontrol
				| \\.addcontrolpath
				| \\.begintransparencygroup
				| \\.begintransparencymaskgroup
				| \\.bind
				| \\.bindnow
				| \\.currentalphaisshape
				| \\.currentblendmode
				| \\.currentfillconstantalpha
				| \\.currentopacityalpha
				| \\.currentoverprintmode
				| \\.currentpathcontrolstate
				| \\.currentshapealpha
				| \\.currentstrokeconstantalpha
				| \\.currenttextknockout
				| \\.dicttomark
				| \\.endtransparencygroup
				| \\.endtransparencymask
				| \\.fileposition
				| \\.genordered
				| \\.knownget
				| \\.locksafe
				| \\.max
				| \\.min
				| \\.PDFClose
				| \\.PDFDrawAnnots
				| \\.PDFDrawPage
				| \\.PDFFile
				| \\.PDFInfo
				| \\.PDFInit
				| \\.PDFMetadata
				| \\.PDFPageInfo
				| \\.PDFPageInfoExt
				| \\.PDFStream
				| \\.popdf14devicefilter
				| \\.pushpdf14devicefilter
				| \\.setalphaisshape
				| \\.setblendmode
				| \\.setdebug
				| \\.setfillconstantalpha
				| \\.setopacityalpha
				| \\.setoverprintmode
				| \\.setsafe
				| \\.setshapealpha
				| \\.setstrokeconstantalpha
				| \\.settextknockout
				| \\.shellarguments
				| \\.tempfile
				| %Type1BuildChar
				| %Type1BuildGlyph
				| arccos
				| arcsin
				| copydevice
				| copyscanlines
				| currentdevice
				| dopdfpages
				| finddevice
				| findlibfile
				| findprotodevice
				| getdeviceprops
				| getenv
				| makeimagedevice
				| pdfclose
				| pdfgetpage
				| pdfopen
				| pdfshowpage
				| pdfshowpage_finish
				| pdfshowpage_init
				| pdfshowpage_setpage
				| putdeviceprops
				| runpdf
				| runpdfbegin
				| runpdfend
				| runpdfpagerange
				| setdevice
				) \\b (?![^/\\s{}()<>\\[\\]%])
			"""
		}]


	# Hexadecimal data: < … >
	hex:
		name: "string.other.hexadecimal.postscript"
		begin: "<"
		end:   ">"
		beginCaptures: 0: name: "punctuation.definition.string.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.string.end.postscript"
		patterns: [
			name: "invalid.illegal.hexadecimal.char.postscript"
			match: "[^>0-9A-Fa-f\\s]+"
		]


	# Name objects
	names:
		patterns: [{
			# //Immediately Evaluated Name
			name:  "variable.other.constant.immediately-evaluated.postscript"
			match: "(//)[^()<>\\[\\]{}/%\\s]*"
			captures:
				1: name: "punctuation.definition.name.postscript"
		},{
			# /Literal
			name:  "variable.other.constant.literal.postscript"
			match: "(/)[^()<>\\[\\]{}/%\\s]*"
			captures:
				1: name: "punctuation.definition.name.postscript"
		},{
			# Executable
			name:  "variable.other.executable.postscript"
			match: "[^()<>\\[\\]{}/%\\s]+"
		}]


	# Integers and floating-points
	number:
		name:  "constant.numeric.postscript"
		match: "[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[Ee][-+]?\\d+)?(?=$|[\\s\\[\\]{}(/%<])"


	# Built-ins
	operators:
		patterns: [{
			# LanguageLevel 3
			name: "keyword.operator.level-3.postscript"
			match: """(?x) (?<![^/\\s{}()<>\\[\\]%]) \\b
				( GetHalftoneName
				| GetPageDeviceName
				| GetSubstituteCRD
				| StartData
				| StartData
				| addglyph
				| beginbfchar
				| beginbfrange
				| begincidchar
				| begincidrange
				| begincmap
				| begincodespacerange
				| beginnotdefchar
				| beginnotdefrange
				| beginrearrangedfont
				| beginusematrix
				| cliprestore
				| clipsave
				| composefont
				| currentsmoothness
				| currenttrapparams
				| endbfchar
				| endbfrange
				| endcidchar
				| endcidrange
				| endcmap
				| endcodespacerange
				| endnotdefchar
				| endnotdefrange
				| endrearrangedfont
				| endusematrix
				| findcolorrendering
				| removeall
				| removeglyphs
				| setsmoothness
				| settrapparams
				| settrapzone
				| shfill
				| usecmap
				| usefont
				) \\b (?![^/\\s{}()<>\\[\\]%])
			"""
		},{
			# LanguageLevel 2
			name: "keyword.operator.level-2.postscript"
			match: """(?x) (?<![^/\\s{}()<>\\[\\]%]) \\b
				( GlobalFontDirectory
				| ISOLatin1Encoding
				| SharedFontDirectory
				| UserObjects
				| arct
				| colorimage
				| configurationerror
				| cshow
				| currentblackgeneration
				| currentcacheparams
				| currentcmykcolor
				| currentcolorrendering
				| currentcolorscreen
				| currentcolorspace
				| currentcolortransfer
				| currentcolor
				| currentdevparams
				| currentglobal
				| currentgstate
				| currenthalftone
				| currentobjectformat
				| currentoverprint
				| currentpacking
				| currentpagedevice
				| currentshared
				| currentstrokeadjust
				| currentsystemparams
				| currentundercolorremoval
				| currentuserparams
				| defineresource
				| defineuserobject
				| deletefile
				| execform
				| execuserobject
				| filenameforall
				| fileposition
				| filter
				| findencoding
				| findresource
				| gcheck
				| globaldict
				| glyphshow
				| gstate
				| ineofill
				| infill
				| instroke
				| inueofill
				| inufill
				| inustroke
				| languagelevel
				| makepattern
				| packedarray
				| printobject
				| product
				| realtime
				| rectclip
				| rectfill
				| rectstroke
				| renamefile
				| resourceforall
				| resourcestatus
				| revision
				| rootfont
				| scheck
				| selectfont
				| serialnumber
				| setbbox
				| setblackgeneration
				| setcachedevice2
				| setcacheparams
				| setcmykcolor
				| setcolorrendering
				| setcolorscreen
				| setcolorspace
				| setcolortransfer
				| setcolor
				| setdevparams
				| setfileposition
				| setglobal
				| setgstate
				| sethalftone
				| setobjectformat
				| setoverprint
				| setpacking
				| setpagedevice
				| setpattern
				| setshared
				| setstrokeadjust
				| setsystemparams
				| setucacheparams
				| setundercolorremoval
				| setuserparams
				| setvmthreshold
				| shareddict
				| startjob
				| uappend
				| ucachestatus
				| ucache
				| ueofill
				| ufill
				| undefinedresource
				| undefinefont
				| undefineresource
				| undefineuserobject
				| undef
				| upath
				| ustrokepath
				| ustroke
				| vmreclaim
				| writeobject
				| xshow
				| xyshow
				| yshow
				) \\b (?![^/\\s{}()<>\\[\\]%])
			"""
		},{
			# LanguageLevel 1
			name: "keyword.operator.level-1.postscript"
			match: """(?x) (?<![^/\\s{}()<>\\[\\]%]) \\b
				( FontDirectory
				| StandardEncoding
				| VMerror
				| abs
				| add
				| aload
				| anchorsearch
				| and
				| arcn
				| arcto
				| arc
				| array
				| ashow
				| astore
				| atan
				| awidthshow
				| begin
				| bind
				| bitshift
				| bytesavailable
				| cachestatus
				| ceiling
				| charpath
				| cleardictstack
				| cleartomark
				| clear
				| clippath
				| clip
				| closefile
				| closepath
				| colorimage
				| concatmatrix
				| concat
				| condition
				| copypage
				| copy
				| cos
				| countdictstack
				| countexecstack
				| counttomark
				| count
				| currentcontext
				| currentdash
				| currentdict
				| currentfile
				| currentflat
				| currentfont
				| currentgray
				| currenthalftonephase
				| currenthsbcolor
				| currentlinecap
				| currentlinejoin
				| currentlinewidth
				| currentmatrix
				| currentmiterlimit
				| currentpoint
				| currentrgbcolor
				| currentscreen
				| currenttransfer
				| curveto
				| cvi
				| cvlit
				| cvn
				| cvrs
				| cvr
				| cvs
				| cvx
				| defaultmatrix
				| definefont
				| defineusername
				| def
				| detach
				| deviceinfo
				| dictfull
				| dictstackoverflow
				| dictstackunderflow
				| dictstack
				| dict
				| div
				| dtransform
				| dup
				| echo
				| eexec
				| end
				| eoclip
				| eofill
				| eoviewclip
				| eq
				| erasepage
				| errordict
				| exch
				| execstackoverflow
				| execstack
				| executeonly
				| executive
				| exec
				| exitserver
				| exit
				| exp
				| false
				| file
				| fill
				| findfont
				| flattenpath
				| floor
				| flushfile
				| flush
				| forall
				| fork
				| for
				| getinterval
				| get
				| ge
				| grestoreall
				| grestore
				| gsave
				| gt
				| handleerror
				| identmatrix
				| idiv
				| idtransform
				| ifelse
				| if
				| imagemask
				| image
				| index
				| initclip
				| initgraphics
				| initmatrix
				| initviewclip
				| internaldict
				| interrupt
				| invalidaccess
				| invalidcontext
				| invalidexit
				| invalidfileaccess
				| invalidfont
				| invalidid
				| invalidrestore
				| invertmatrix
				| ioerror
				| itransform
				| known
				| kshow
				| length
				| le
				| limitcheck
				| lineto
				| ln
				| load
				| lock
				| log
				| loop
				| lt
				| makefont
				| mark
				| matrix
				| maxlength
				| mod
				| monitor
				| moveto
				| mul
				| neg
				| newpath
				| ne
				| noaccess
				| nocurrentpoint
				| notify
				| not
				| nulldevice
				| null
				| or
				| pathbbox
				| pathforall
				| pdfmark
				| pop
				| print
				| prompt
				| pstack
				| putinterval
				| put
				| quit
				| rand
				| rangecheck
				| rcheck
				| rcurveto
				| readhexstring
				| readline
				| readonly
				| readstring
				| read
				| rectviewclip
				| repeat
				| resetfile
				| restore
				| reversepath
				| rlineto
				| rmoveto
				| roll
				| rotate
				| round
				| rrand
				| run
				| save
				| scalefont
				| scale
				| search
				| serverdict
				| setcachedevice
				| setcachelimit
				| setcharwidth
				| setdash
				| setflat
				| setfont
				| setgray
				| sethalftonephase
				| sethsbcolor
				| setlinecap
				| setlinejoin
				| setlinewidth
				| setmatrix
				| setmiterlimit
				| setrgbcolor
				| setscreen
				| settransfer
				| showpage
				| show
				| sin
				| sqrt
				| srand
				| stackoverflow
				| stackunderflow
				| stack
				| start
				| statusdict
				| status
				| stopped
				| stop
				| store
				| stringwidth
				| string
				| strokepath
				| stroke
				| sub
				| syntaxerror
				| systemdict
				| timeout
				| token
				| transform
				| translate
				| true
				| truncate
				| typecheck
				| type
				| undefinedfilename
				| undefinedresult
				| undefined
				| unmatchedmark
				| unregistered
				| userdict
				| usertime
				| version
				| viewclippath
				| viewclip
				| vmstatus
				| wait
				| wcheck
				| where
				| widthshow
				| writehexstring
				| writestring
				| write
				| wtranslation
				| xcheck
				| xor
				| yield
				) \\b (?![^/\\s{}()<>\\[\\]%])
				|
				# Stuff that starts with a non-word character
				(?<=^|[/\\s{}()<>\\[\\]%])
				(=?=|\\$error)
				(?=$|[/\\s{}()<>\\[\\]%])
			"""
		}]


	# Procedure/subroutine
	procedure:
		name:  "meta.procedure.postscript"
		begin: "{"
		end:   "}"
		beginCaptures: 0: name: "punctuation.definition.procedure.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.procedure.end.postscript"
		patterns: [include: "#main"]


	# Number with explicit radix
	radix:
		name: "constant.numeric.radix.postscript"
		match: "[0-3]?[0-9]#[0-9a-zA-Z]+"


	# “Special” files
	specialFiles:
		patterns: [{
			# %device%file
			name: "constant.language.device-name.$2-device.postscript"
			match: "\\G(%)([-\\w]+)(?=%|\\)|$)(%)?"
			captures:
				1: name: "punctuation.definition.device-name.begin.postscript"
				3: name: "punctuation.definition.device-name.end.postscript"
		},{
			# Usual stdio(3) streams
			name: "constant.language.special-file.stdio.$2.postscript"
			match: "\\G(%)(stderr|stdin|stdout)(?=\\)|$)"
			captures:
				1: name: "punctuation.definition.special-file.begin.postscript"
				3: name: "punctuation.definition.special-file.end.postscript"
		},{
			# Special files related to interactive execution
			name: "constant.language.special-file.interactive.$2.postscript"
			match: "\\G(%)(lineedit|statementedit)(?=\\)|$)"
			captures:
				1: name: "punctuation.definition.special-file.begin.postscript"
				3: name: "punctuation.definition.special-file.end.postscript"
		}]


	# (Strings (denoted by (balanced) (brackets)))
	string:
		name:  "string.other.postscript"
		begin: "\\("
		end:   "\\)"
		beginCaptures: 0: name: "punctuation.definition.string.begin.postscript"
		endCaptures:   0: name: "punctuation.definition.string.end.postscript"
		patterns: [include: "#stringInnards"]

	stringInnards:
		patterns: [{
			include: "#specialFiles"
		},{
			name:  "constant.numeric.octal.postscript"
			match: "\\\\[0-7]{1,3}"
		},{
			name:  "constant.character.escape.postscript"
			match: "\\\\(\\\\|[bfnrt()]|[0-7]{1,3}|\\r?\\n)"
		},{
			name:  "invalid.illegal.unknown-escape.postscript.ignored"
			match: "\\\\"
		},{
			begin: "\\("
			end:   "\\)"
			patterns: [include: "#stringInnards"]
		}]
